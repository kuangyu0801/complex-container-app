version: '3'
services:
    postgres: 
        image: 'postgres:latest'
        environment: 
            - POSTGRES_PASSWORD=postgres_password
    redis:
        image: 'redis:latest'
    nginx:
        # nginx is lightweight and critial, always restart
        restart: always
        build:
            dockerfile: Dockerfile.dev
            context: ./nginx
        ports:
            # mapping localhost 3050 to default nginx port 80
            - '3050:80'
        depends_on: 
            - api
            - client
    # rename server to api to avoid confusing naming
    api:
        build:
            dockerfile: Dockerfile.dev
            context: ./server
        volumes:
            # doesn't overrite image's node_modules folder
            - /app/node_modules
            # mapping server source code to image working folder
            - ./server:/app  
        environment:
            - REDIS_HOST=redis
            - REDIS_PORT=6379
            - PGUER=postgres
            - PGHOST=postgres
            - PGDATABASE=postgres
            - PGPASSWORD=postgres_password
            - PGPORT=5432
    client:
        stdin_open: true
        build:
            dockerfile: Dockerfile.dev
            context: ./client
        volumes: 
            - /app/node_modules
            - ./client:/app
    worker:
        build:
            dockerfile: Dockerfile.dev
            context: ./worker
        volumes:
            - /app/node_modules
            - ./worker:/app
        environment:
            - REDIS_HOST=redis
            - REDIS_PORT=6379          
# docker compose down && docker compose up --build